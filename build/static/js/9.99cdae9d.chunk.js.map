{"version":3,"sources":["shared/components/UIElements/Card.js","projects/components/ProjectItem.js","projects/components/ProjectList.js","projects/pages/Projects.js"],"names":["Card","props","className","style","children","PlaceItem","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","useState","showConfirmModal","setShowConfirmModal","cancelDeleteHandler","confirmDeleteHandler","a","id","Authorization","token","onDelete","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","footerClass","footer","Button","inverse","onClick","danger","LoadingSpinner","asOverlay","title","technos","description","href","lien","repository","userId","creatorId","to","ProjectList","items","length","map","project","key","image","creator","onDeletePlace","Projects","loadedProjects","setLoadedProjects","useEffect","responseData","projects","fetchProjects","onDeleteProject","deletedProjectId","prevProjects","filter"],"mappings":"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","file":"static/js/9.99cdae9d.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useContext, useState } from 'react';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './ProjectItem.css';\n\nconst PlaceItem = (props) => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(`/api/tweekdev/projects/${props.id}`, 'DELETE', null, {\n        Authorization: 'Bearer ' + auth.token,\n      });\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <div className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3 className=\"place-item__technos\">{props.technos}</h3>\n            <p className=\"place-item__p\">{props.description}</p>\n          </div>\n          <div className=\"place-item__info\">\n            <div className=\"place-item__actions\">\n              <Button href={props.lien}>Lien</Button>\n\n              <Button href={props.repository} inverse>\n                Repository\n              </Button>\n            </div>\n          </div>\n          {auth.userId === props.creatorId && (\n            <div className=\"place-item__actions\">\n              <Button to={`/projects/${props.id}`}>EDIT</Button>\n\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            </div>\n          )}\n        </Card>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from 'react';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './ProjectItem';\nimport './ProjectList.css';\n\nconst ProjectList = (props) => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No projects found. Maybe create one?</h2>\n          <Button to=\"/projects/new\">Add project?</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"project-content\">\n      <div className=\"center projects\">\n        <h2>MY PROJECTS</h2>\n        <h3 className=\"subtitle-project\">Others projects are coming soon...</h3>\n      </div>\n      <div className=\"place-list\">\n        {props.items.map((project) => (\n          <PlaceItem\n            key={project.id}\n            id={project.id}\n            image={project.image}\n            title={project.title}\n            description={project.description}\n            technos={project.technos}\n            creatorId={project.creator}\n            lien={project.lien}\n            repository={project.repository}\n            onDelete={props.onDeletePlace}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { useEffect, useState } from 'react';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport ProjectList from '../components/ProjectList';\n\nconst Projects = () => {\n  const [loadedProjects, setLoadedProjects] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const responseData = await sendRequest(`/api/tweekdev/projects`);\n        setLoadedProjects(responseData.projects);\n      } catch (err) {}\n    };\n    fetchProjects();\n  }, [sendRequest]);\n\n  const projectDeletedHandler = (deletedProjectId) => {\n    setLoadedProjects((prevProjects) =>\n      prevProjects.filter((project) => project.id !== deletedProjectId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedProjects && (\n        <ProjectList\n          items={loadedProjects}\n          onDeleteProject={projectDeletedHandler}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Projects;\n"],"sourceRoot":""}