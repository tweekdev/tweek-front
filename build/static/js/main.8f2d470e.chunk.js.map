{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","assets/image/tweek.svg","shared/hooks/auth-hook.js","shared/components/Navigation/Logo.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","module","exports","logoutTimer","Logo","src","tweek","alt","Component","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Home","React","lazy","About","Contact","NewProject","UpdateProject","Projects","Auth","App","routes","setToken","setUserId","tokenExpirationDate","setTokenExpirationDate","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","render","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8f2d470e.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {},\n});\n","import React from 'react';\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = (props) => {\n  return (\n    <div>\n      <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n        <div className=\"lds-ripple\">\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","module.exports = __webpack_public_path__ + \"static/media/tweek.1ac82cfd.svg\";","import { useCallback, useEffect, useState } from 'react';\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [userId, setUserId] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString(),\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(token);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, [token]);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [logout, token, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};\n","import React, { Component } from 'react';\r\nimport tweek from '../../../assets/image/tweek.svg';\r\nimport './Logo.css';\r\nclass Logo extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"logo\">\r\n        <img className=\"logo-img\" src={tweek} alt=\"logo\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\nimport \"./MainHeader.css\";\n\nconst MainHeader = (props) => {\n  return <header className='main-header'> {props.children} </header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = (props) => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      {auth.isLoggedIn && (\n        <>\n          <li>\n            <NavLink to=\"/\" exact>\n              HOME\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/project/new\">ADD PROJECT</NavLink>\n          </li>\n        </>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <form>\n            <button onClick={auth.logout}>LOGOUT</button>\n          </form>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./SideDrawer.css\";\n\nconst SideDrawer = (props) => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames='slide-in-left'\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className='side-drawer' onClick={props.onClick}>\n        {props.children}\n      </aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Backdrop from '../UIElements/Backdrop';\nimport Logo from './Logo';\nimport MainHeader from './MainHeader';\nimport './MainNavigation.css';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nconst MainNavigation = () => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n  return (\n    <>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler}></Backdrop>}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks></NavLinks>\n        </nav>\n      </SideDrawer>\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span></span>\n          <span></span>\n          <span></span>\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">\n            <Logo></Logo>\n          </Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks></NavLinks>\n        </nav>\n      </MainHeader>\n    </>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst Home = React.lazy(() => import('./shared/components/Home'));\nconst About = React.lazy(() => import('./shared/components/Home/About'));\nconst BackgroundLogo = React.lazy(() =>\n  import('./shared/components/BackgroundLogo')\n);\nconst Contact = React.lazy(() => import('./shared/components/Home/Contact'));\nconst NewProject = React.lazy(() => import('./projects/pages/NewProject'));\nconst UpdateProject = React.lazy(() =>\n  import('./projects/pages/UpdateProject')\n);\nconst Projects = React.lazy(() => import('./projects/pages/Projects'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <div>\n            <Home></Home>\n            <About></About>\n            <Projects></Projects>\n            <Contact></Contact>\n          </div>\n        </Route>\n        <Route path=\"/project/new\" exact>\n          <NewProject />\n        </Route>\n        <Route path=\"/projects/:projectId\">\n          <UpdateProject />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <div>\n            <Home></Home>\n            <About></About>\n            <Projects></Projects>\n            <Contact></Contact>\n          </div>\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner></LoadingSpinner>\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.register();\n"],"sourceRoot":""}